// DIFFUSION STEP:
// Iteratively diffuses the liquid, causing viscous fluids to slow

#version 430 core
layout (local_size_x = 16, local_size_y = 16) in; // workgroup size

//Ax = b
layout (rgba32f, binding = 0) uniform readonly  image2D x; //pressure texture
layout (rgba32f, binding = 1) uniform readonly  image2D b; //output of the divergence program
layout (rgba32f, binding = 2) uniform writeonly image2D outImage;

//porque?
uniform float alpha;
uniform float rBeta;

void main()
{
	ivec2 curCoord = ivec2(gl_GlobalInvocationID.xy);

	//sample around target location using offset
	vec4 xleft  = imageLoad(x, curCoord - ivec2(1,0));
	vec4 xright = imageLoad(x, curCoord + ivec2(1,0));
	vec4 xbelow = imageLoad(x, curCoord - ivec2(0,1));
	vec4 xabove = imageLoad(x, curCoord + ivec2(0,1));

	//sample from center of b
	vec4 bcenter = imageLoad(b, curCoord);

	//evaluate jacobi iteration
	vec4 texel = (xleft + xright + xbelow + xabove + alpha * bcenter) * rBeta;

	//store result
	imageStore(outImage, curCoord, texel);
}
